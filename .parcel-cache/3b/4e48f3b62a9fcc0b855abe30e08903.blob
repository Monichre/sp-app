var $e269555b5f001db761045d91cd3d3610$exports = {};
var $e269555b5f001db761045d91cd3d3610$var$whitespace = $parcel$require("e269555b5f001db761045d91cd3d3610", "is-whitespace-character");
var $e269555b5f001db761045d91cd3d3610$var$locate = $parcel$require("e269555b5f001db761045d91cd3d3610", "../locate/code-inline");
$e269555b5f001db761045d91cd3d3610$exports = $e269555b5f001db761045d91cd3d3610$var$inlineCode;
$e269555b5f001db761045d91cd3d3610$var$inlineCode.locator = $e269555b5f001db761045d91cd3d3610$var$locate;
var $e269555b5f001db761045d91cd3d3610$var$C_TICK = '`';
/* Tokenise inline code. */

function $e269555b5f001db761045d91cd3d3610$var$inlineCode(eat, value, silent) {
  var length = value.length;
  var index = 0;
  var queue = '';
  var tickQueue = '';
  var contentQueue;
  var subqueue;
  var count;
  var openingCount;
  var subvalue;
  var character;
  var found;
  var next;

  while (index < length) {
    if (value.charAt(index) !== $e269555b5f001db761045d91cd3d3610$var$C_TICK) {
      break;
    }

    queue += $e269555b5f001db761045d91cd3d3610$var$C_TICK;
    index++;
  }

  if (!queue) {
    return;
  }

  subvalue = queue;
  openingCount = index;
  queue = '';
  next = value.charAt(index);
  count = 0;

  while (index < length) {
    character = next;
    next = value.charAt(index + 1);

    if (character === $e269555b5f001db761045d91cd3d3610$var$C_TICK) {
      count++;
      tickQueue += character;
    } else {
      count = 0;
      queue += character;
    }

    if (count && next !== $e269555b5f001db761045d91cd3d3610$var$C_TICK) {
      if (count === openingCount) {
        subvalue += queue + tickQueue;
        found = true;
        break;
      }

      queue += tickQueue;
      tickQueue = '';
    }

    index++;
  }

  if (!found) {
    if (openingCount % 2 !== 0) {
      return;
    }

    queue = '';
  }
  /* istanbul ignore if - never used (yet) */


  if (silent) {
    return true;
  }

  contentQueue = '';
  subqueue = '';
  length = queue.length;
  index = -1;

  while (++index < length) {
    character = queue.charAt(index);

    if ($e269555b5f001db761045d91cd3d3610$var$whitespace(character)) {
      subqueue += character;
      continue;
    }

    if (subqueue) {
      if (contentQueue) {
        contentQueue += subqueue;
      }

      subqueue = '';
    }

    contentQueue += character;
  }

  return eat(subvalue)({
    type: 'inlineCode',
    value: contentQueue
  });
}