var $df655bf79342096729adab0a8294d762$exports = {};
$parcel$require("df655bf79342096729adab0a8294d762", "react");
$parcel$require("df655bf79342096729adab0a8294d762", "./ApolloContext");
$parcel$require("df655bf79342096729adab0a8294d762", "./internal/actHack");
$parcel$require("df655bf79342096729adab0a8294d762", "./utils");

function $df655bf79342096729adab0a8294d762$var$_extends() {
  $df655bf79342096729adab0a8294d762$var$_extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return $df655bf79342096729adab0a8294d762$var$_extends.apply(this, arguments);
}

function $df655bf79342096729adab0a8294d762$var$_objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}

function $df655bf79342096729adab0a8294d762$export$useSubscription(query, _temp) {
  var _ref = _temp === void 0 ? {} : _temp,
      onSubscriptionData = _ref.onSubscriptionData,
      overrideClient = _ref.client,
      options = $df655bf79342096729adab0a8294d762$var$_objectWithoutPropertiesLoose(_ref, ["onSubscriptionData", "client"]);

  var client = $df655bf79342096729adab0a8294d762$import$useApolloClient(overrideClient);
  var onSubscriptionDataRef = $df655bf79342096729adab0a8294d762$import$useRef(null);

  var _useState = $df655bf79342096729adab0a8294d762$import$useState({
    loading: true
  }),
      result = _useState[0],
      setResultBase = _useState[1];

  onSubscriptionDataRef.current = onSubscriptionData;

  function setResult(newResult) {
    // A hack to get rid React warnings during tests.
    $df655bf79342096729adab0a8294d762$import$actHack(function () {
      setResultBase(newResult);
    });
  }

  $df655bf79342096729adab0a8294d762$import$useEffect(function () {
    if (options.skip === true) {
      return;
    }

    var subscription = client.subscribe($df655bf79342096729adab0a8294d762$var$_extends({}, options, {
      query: query
    })).subscribe(function (nextResult) {
      var newResult = {
        data: nextResult.data,
        error: undefined,
        loading: false
      };
      setResult(newResult);

      if (onSubscriptionDataRef.current) {
        onSubscriptionDataRef.current({
          client: client,
          subscriptionData: newResult
        });
      }
    }, function (error) {
      setResult({
        loading: false,
        data: result.data,
        error: error
      });
    });
    return function () {
      setResult({
        loading: true
      });
      subscription.unsubscribe();
    };
  }, [query, options && $df655bf79342096729adab0a8294d762$import$objToKey(options)]);
  return result;
}

$df655bf79342096729adab0a8294d762$exports.useSubscription = $df655bf79342096729adab0a8294d762$export$useSubscription;