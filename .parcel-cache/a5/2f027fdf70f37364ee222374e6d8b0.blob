var $d7923c69f82a713fade431a35185744e$exports = {};
$d7923c69f82a713fade431a35185744e$exports = $d7923c69f82a713fade431a35185744e$var$visitParents;
var $d7923c69f82a713fade431a35185744e$var$convert = $parcel$require("d7923c69f82a713fade431a35185744e", "unist-util-is/convert");
var $d7923c69f82a713fade431a35185744e$var$CONTINUE = true;
var $d7923c69f82a713fade431a35185744e$var$SKIP = 'skip';
var $d7923c69f82a713fade431a35185744e$var$EXIT = false;
$d7923c69f82a713fade431a35185744e$var$visitParents.CONTINUE = $d7923c69f82a713fade431a35185744e$var$CONTINUE;
$d7923c69f82a713fade431a35185744e$var$visitParents.SKIP = $d7923c69f82a713fade431a35185744e$var$SKIP;
$d7923c69f82a713fade431a35185744e$var$visitParents.EXIT = $d7923c69f82a713fade431a35185744e$var$EXIT;

function $d7923c69f82a713fade431a35185744e$var$visitParents(tree, test, visitor, reverse) {
  var is;

  if (typeof test === 'function' && typeof visitor !== 'function') {
    reverse = visitor;
    visitor = test;
    test = null;
  }

  is = $d7923c69f82a713fade431a35185744e$var$convert(test);
  one(tree, null, []); // Visit a single node.

  function one(node, index, parents) {
    var result = [];
    var subresult;

    if (!test || is(node, index, parents[parents.length - 1] || null)) {
      result = $d7923c69f82a713fade431a35185744e$var$toResult(visitor(node, parents));

      if (result[0] === $d7923c69f82a713fade431a35185744e$var$EXIT) {
        return result;
      }
    }

    if (node.children && result[0] !== $d7923c69f82a713fade431a35185744e$var$SKIP) {
      subresult = $d7923c69f82a713fade431a35185744e$var$toResult(all(node.children, parents.concat(node)));
      return subresult[0] === $d7923c69f82a713fade431a35185744e$var$EXIT ? subresult : result;
    }

    return result;
  } // Visit children in `parent`.


  function all(children, parents) {
    var min = -1;
    var step = reverse ? -1 : 1;
    var index = (reverse ? children.length : min) + step;
    var result;

    while (index > min && index < children.length) {
      result = one(children[index], index, parents);

      if (result[0] === $d7923c69f82a713fade431a35185744e$var$EXIT) {
        return result;
      }

      index = typeof result[1] === 'number' ? result[1] : index + step;
    }
  }
}

function $d7923c69f82a713fade431a35185744e$var$toResult(value) {
  if (value !== null && typeof value === 'object' && 'length' in value) {
    return value;
  }

  if (typeof value === 'number') {
    return [$d7923c69f82a713fade431a35185744e$var$CONTINUE, value];
  }

  return [value];
}