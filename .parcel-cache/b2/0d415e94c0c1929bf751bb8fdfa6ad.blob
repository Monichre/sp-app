var $ce5898b3f5dac94bcfe2569b22425$exports = {};
$parcel$require("963ce5898b3f5dac94bcfe2569b22425", "tslib");
$parcel$require("963ce5898b3f5dac94bcfe2569b22425", "apollo-link");
$parcel$require("963ce5898b3f5dac94bcfe2569b22425", "apollo-link-http-common");

var $ce5898b3f5dac94bcfe2569b22425$export$createHttpLink = function (linkOptions) {
  if (linkOptions === void 0) {
    linkOptions = {};
  }

  var _a = linkOptions.uri,
      uri = _a === void 0 ? '/graphql' : _a,
      fetcher = linkOptions.fetch,
      includeExtensions = linkOptions.includeExtensions,
      useGETForQueries = linkOptions.useGETForQueries,
      requestOptions = $ce5898b3f5dac94bcfe2569b22425$import$__rest(linkOptions, ["uri", "fetch", "includeExtensions", "useGETForQueries"]);
  $ce5898b3f5dac94bcfe2569b22425$import$checkFetcher(fetcher);

  if (!fetcher) {
    fetcher = fetch;
  }

  var linkConfig = {
    http: {
      includeExtensions: includeExtensions
    },
    options: requestOptions.fetchOptions,
    credentials: requestOptions.credentials,
    headers: requestOptions.headers
  };
  return new $ce5898b3f5dac94bcfe2569b22425$import$ApolloLink(function (operation) {
    var chosenURI = $ce5898b3f5dac94bcfe2569b22425$import$selectURI(operation, uri);
    var context = operation.getContext();
    var clientAwarenessHeaders = {};

    if (context.clientAwareness) {
      var _a = context.clientAwareness,
          name_1 = _a.name,
          version = _a.version;

      if (name_1) {
        clientAwarenessHeaders['apollographql-client-name'] = name_1;
      }

      if (version) {
        clientAwarenessHeaders['apollographql-client-version'] = version;
      }
    }

    var contextHeaders = $ce5898b3f5dac94bcfe2569b22425$import$__assign({}, clientAwarenessHeaders, context.headers);
    var contextConfig = {
      http: context.http,
      options: context.fetchOptions,
      credentials: context.credentials,
      headers: contextHeaders
    };

    var _b = $ce5898b3f5dac94bcfe2569b22425$import$selectHttpOptionsAndBody(operation, $ce5898b3f5dac94bcfe2569b22425$import$fallbackHttpConfig, linkConfig, contextConfig),
        options = _b.options,
        body = _b.body;

    var controller;

    if (!options.signal) {
      var _c = $ce5898b3f5dac94bcfe2569b22425$import$createSignalIfSupported(),
          _controller = _c.controller,
          signal = _c.signal;

      controller = _controller;
      if (controller) options.signal = signal;
    }

    var definitionIsMutation = function (d) {
      return d.kind === 'OperationDefinition' && d.operation === 'mutation';
    };

    if (useGETForQueries && !operation.query.definitions.some(definitionIsMutation)) {
      options.method = 'GET';
    }

    if (options.method === 'GET') {
      var _d = $ce5898b3f5dac94bcfe2569b22425$var$rewriteURIForGET(chosenURI, body),
          newURI = _d.newURI,
          parseError = _d.parseError;

      if (parseError) {
        return $ce5898b3f5dac94bcfe2569b22425$import$fromError(parseError);
      }

      chosenURI = newURI;
    } else {
      try {
        options.body = $ce5898b3f5dac94bcfe2569b22425$import$serializeFetchParameter(body, 'Payload');
      } catch (parseError) {
        return $ce5898b3f5dac94bcfe2569b22425$import$fromError(parseError);
      }
    }

    return new $ce5898b3f5dac94bcfe2569b22425$import$Observable(function (observer) {
      fetcher(chosenURI, options).then(function (response) {
        operation.setContext({
          response: response
        });
        return response;
      }).then($ce5898b3f5dac94bcfe2569b22425$import$parseAndCheckHttpResponse(operation)).then(function (result) {
        observer.next(result);
        observer.complete();
        return result;
      }).catch(function (err) {
        if (err.name === 'AbortError') return;

        if (err.result && err.result.errors && err.result.data) {
          observer.next(err.result);
        }

        observer.error(err);
      });
      return function () {
        if (controller) controller.abort();
      };
    });
  });
};

function $ce5898b3f5dac94bcfe2569b22425$var$rewriteURIForGET(chosenURI, body) {
  var queryParams = [];

  var addQueryParam = function (key, value) {
    queryParams.push(key + "=" + encodeURIComponent(value));
  };

  if ('query' in body) {
    addQueryParam('query', body.query);
  }

  if (body.operationName) {
    addQueryParam('operationName', body.operationName);
  }

  if (body.variables) {
    var serializedVariables = void 0;

    try {
      serializedVariables = $ce5898b3f5dac94bcfe2569b22425$import$serializeFetchParameter(body.variables, 'Variables map');
    } catch (parseError) {
      return {
        parseError: parseError
      };
    }

    addQueryParam('variables', serializedVariables);
  }

  if (body.extensions) {
    var serializedExtensions = void 0;

    try {
      serializedExtensions = $ce5898b3f5dac94bcfe2569b22425$import$serializeFetchParameter(body.extensions, 'Extensions map');
    } catch (parseError) {
      return {
        parseError: parseError
      };
    }

    addQueryParam('extensions', serializedExtensions);
  }

  var fragment = '',
      preFragment = chosenURI;
  var fragmentStart = chosenURI.indexOf('#');

  if (fragmentStart !== -1) {
    fragment = chosenURI.substr(fragmentStart);
    preFragment = chosenURI.substr(0, fragmentStart);
  }

  var queryParamsPrefix = preFragment.indexOf('?') === -1 ? '?' : '&';
  var newURI = preFragment + queryParamsPrefix + queryParams.join('&') + fragment;
  return {
    newURI: newURI
  };
}

var $ce5898b3f5dac94bcfe2569b22425$export$HttpLink = function (_super) {
  $ce5898b3f5dac94bcfe2569b22425$import$__extends(HttpLink, _super);

  function HttpLink(opts) {
    return _super.call(this, $ce5898b3f5dac94bcfe2569b22425$export$createHttpLink(opts).request) || this;
  }

  return HttpLink;
}($ce5898b3f5dac94bcfe2569b22425$import$ApolloLink);

$ce5898b3f5dac94bcfe2569b22425$exports.createHttpLink = $ce5898b3f5dac94bcfe2569b22425$export$createHttpLink;
$ce5898b3f5dac94bcfe2569b22425$exports.HttpLink = $ce5898b3f5dac94bcfe2569b22425$export$HttpLink;