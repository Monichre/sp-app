var $bb5e1cd3cdd5c24fc8784ce0b6fc7c8$exports = {};

/**
 * Returns the object type of the given payload
 *
 * @param {*} payload
 * @returns {string}
 */
function $bb5e1cd3cdd5c24fc8784ce0b6fc7c8$export$getType(payload) {
  return Object.prototype.toString.call(payload).slice(8, -1);
}
/**
 * Returns whether the payload is undefined
 *
 * @param {*} payload
 * @returns {payload is undefined}
 */


function $bb5e1cd3cdd5c24fc8784ce0b6fc7c8$export$isUndefined(payload) {
  return $bb5e1cd3cdd5c24fc8784ce0b6fc7c8$export$getType(payload) === 'Undefined';
}
/**
 * Returns whether the payload is null
 *
 * @param {*} payload
 * @returns {payload is null}
 */


function $bb5e1cd3cdd5c24fc8784ce0b6fc7c8$export$isNull(payload) {
  return $bb5e1cd3cdd5c24fc8784ce0b6fc7c8$export$getType(payload) === 'Null';
}
/**
 * Returns whether the payload is a plain JavaScript object (excluding special classes or objects with other prototypes)
 *
 * @param {*} payload
 * @returns {payload is {[key: string]: any}}
 */


function $bb5e1cd3cdd5c24fc8784ce0b6fc7c8$export$isPlainObject(payload) {
  if ($bb5e1cd3cdd5c24fc8784ce0b6fc7c8$export$getType(payload) !== 'Object') return false;
  return payload.constructor === Object && Object.getPrototypeOf(payload) === Object.prototype;
}
/**
 * Returns whether the payload is a plain JavaScript object (excluding special classes or objects with other prototypes)
 *
 * @param {*} payload
 * @returns {payload is {[key: string]: any}}
 */


function $bb5e1cd3cdd5c24fc8784ce0b6fc7c8$export$isObject(payload) {
  return $bb5e1cd3cdd5c24fc8784ce0b6fc7c8$export$isPlainObject(payload);
}
/**
 * Returns whether the payload is an any kind of object (including special classes or objects with different prototypes)
 *
 * @param {*} payload
 * @returns {payload is {[key: string]: any}}
 */


function $bb5e1cd3cdd5c24fc8784ce0b6fc7c8$export$isAnyObject(payload) {
  return $bb5e1cd3cdd5c24fc8784ce0b6fc7c8$export$getType(payload) === 'Object';
}
/**
 * Returns whether the payload is an object like a type passed in < >
 *
 * Usage: isObjectLike<{id: any}>(payload) // will make sure it's an object and has an `id` prop.
 *
 * @template T this must be passed in < >
 * @param {*} payload
 * @returns {payload is T}
 */


function $bb5e1cd3cdd5c24fc8784ce0b6fc7c8$export$isObjectLike(payload) {
  return $bb5e1cd3cdd5c24fc8784ce0b6fc7c8$export$isAnyObject(payload);
}
/**
 * Returns whether the payload is a function
 *
 * @param {*} payload
 * @returns {payload is Function}
 */


function $bb5e1cd3cdd5c24fc8784ce0b6fc7c8$export$isFunction(payload) {
  return $bb5e1cd3cdd5c24fc8784ce0b6fc7c8$export$getType(payload) === 'Function';
}
/**
 * Returns whether the payload is an array
 *
 * @param {*} payload
 * @returns {payload is undefined}
 */


function $bb5e1cd3cdd5c24fc8784ce0b6fc7c8$export$isArray(payload) {
  return $bb5e1cd3cdd5c24fc8784ce0b6fc7c8$export$getType(payload) === 'Array';
}
/**
 * Returns whether the payload is a string
 *
 * @param {*} payload
 * @returns {payload is string}
 */


function $bb5e1cd3cdd5c24fc8784ce0b6fc7c8$export$isString(payload) {
  return $bb5e1cd3cdd5c24fc8784ce0b6fc7c8$export$getType(payload) === 'String';
}
/**
 * Returns whether the payload is a string, BUT returns false for ''
 *
 * @param {*} payload
 * @returns {payload is string}
 */


function $bb5e1cd3cdd5c24fc8784ce0b6fc7c8$export$isFullString(payload) {
  return $bb5e1cd3cdd5c24fc8784ce0b6fc7c8$export$isString(payload) && payload !== '';
}
/**
 * Returns whether the payload is ''
 *
 * @param {*} payload
 * @returns {payload is string}
 */


function $bb5e1cd3cdd5c24fc8784ce0b6fc7c8$export$isEmptyString(payload) {
  return payload === '';
}
/**
 * Returns whether the payload is a number
 *
 * This will return false for NaN
 *
 * @param {*} payload
 * @returns {payload is number}
 */


function $bb5e1cd3cdd5c24fc8784ce0b6fc7c8$export$isNumber(payload) {
  return $bb5e1cd3cdd5c24fc8784ce0b6fc7c8$export$getType(payload) === 'Number' && !isNaN(payload);
}
/**
 * Returns whether the payload is a boolean
 *
 * @param {*} payload
 * @returns {payload is boolean}
 */


function $bb5e1cd3cdd5c24fc8784ce0b6fc7c8$export$isBoolean(payload) {
  return $bb5e1cd3cdd5c24fc8784ce0b6fc7c8$export$getType(payload) === 'Boolean';
}
/**
 * Returns whether the payload is a regular expression
 *
 * @param {*} payload
 * @returns {payload is RegExp}
 */


function $bb5e1cd3cdd5c24fc8784ce0b6fc7c8$export$isRegExp(payload) {
  return $bb5e1cd3cdd5c24fc8784ce0b6fc7c8$export$getType(payload) === 'RegExp';
}
/**
 * Returns whether the payload is a Symbol
 *
 * @param {*} payload
 * @returns {payload is symbol}
 */


function $bb5e1cd3cdd5c24fc8784ce0b6fc7c8$export$isSymbol(payload) {
  return $bb5e1cd3cdd5c24fc8784ce0b6fc7c8$export$getType(payload) === 'Symbol';
}
/**
 * Returns whether the payload is a date, and that the date is Valid
 *
 * @param {*} payload
 * @returns {payload is Date}
 */


function $bb5e1cd3cdd5c24fc8784ce0b6fc7c8$export$isDate(payload) {
  return $bb5e1cd3cdd5c24fc8784ce0b6fc7c8$export$getType(payload) === 'Date' && !isNaN(payload);
}
/**
 * Returns whether the payload is a blob
 *
 * @param {*} payload
 * @returns {payload is Blob}
 */


function $bb5e1cd3cdd5c24fc8784ce0b6fc7c8$export$isBlob(payload) {
  return $bb5e1cd3cdd5c24fc8784ce0b6fc7c8$export$getType(payload) === 'Blob';
}
/**
 * Returns whether the payload is a file
 *
 * @param {*} payload
 * @returns {payload is File}
 */


function $bb5e1cd3cdd5c24fc8784ce0b6fc7c8$export$isFile(payload) {
  return $bb5e1cd3cdd5c24fc8784ce0b6fc7c8$export$getType(payload) === 'File';
}
/**
 * Returns whether the payload is a primitive type (eg. Boolean | Null | Undefined | Number | String | Symbol)
 *
 * @param {*} payload
 * @returns {(payload is boolean | null | undefined | number | string | symbol)}
 */


function $bb5e1cd3cdd5c24fc8784ce0b6fc7c8$export$isPrimitive(payload) {
  return $bb5e1cd3cdd5c24fc8784ce0b6fc7c8$export$isBoolean(payload) || $bb5e1cd3cdd5c24fc8784ce0b6fc7c8$export$isNull(payload) || $bb5e1cd3cdd5c24fc8784ce0b6fc7c8$export$isUndefined(payload) || $bb5e1cd3cdd5c24fc8784ce0b6fc7c8$export$isNumber(payload) || $bb5e1cd3cdd5c24fc8784ce0b6fc7c8$export$isString(payload) || $bb5e1cd3cdd5c24fc8784ce0b6fc7c8$export$isSymbol(payload);
}
/**
 * Returns true whether the payload is null or undefined
 *
 * @param {*} payload
 * @returns {(payload is null | undefined)}
 */


function $bb5e1cd3cdd5c24fc8784ce0b6fc7c8$export$isNullOrUndefined(payload) {
  return $bb5e1cd3cdd5c24fc8784ce0b6fc7c8$export$isNull(payload) || $bb5e1cd3cdd5c24fc8784ce0b6fc7c8$export$isUndefined(payload);
}
/**
 * Does a generic check to check that the given payload is of a given type.
 * In cases like Number, it will return true for NaN as NaN is a Number (thanks javascript!);
 * It will, however, differentiate between object and null
 *
 * @template T
 * @param {*} payload
 * @param {T} type
 * @throws {TypeError} Will throw type error if type is an invalid type
 * @returns {payload is T}
 */


function $bb5e1cd3cdd5c24fc8784ce0b6fc7c8$export$isType(payload, type) {
  if (!(type instanceof Function)) {
    throw new TypeError('Type must be a function');
  }

  if (!type.hasOwnProperty('prototype')) {
    throw new TypeError('Type is not a class');
  } // Classes usually have names (as functions usually have names)


  var name = type.name;
  return $bb5e1cd3cdd5c24fc8784ce0b6fc7c8$export$getType(payload) === name || Boolean(payload && payload.constructor === type);
}

$bb5e1cd3cdd5c24fc8784ce0b6fc7c8$exports.isUndefined = $bb5e1cd3cdd5c24fc8784ce0b6fc7c8$export$isUndefined;
$bb5e1cd3cdd5c24fc8784ce0b6fc7c8$exports.isType = $bb5e1cd3cdd5c24fc8784ce0b6fc7c8$export$isType;
$bb5e1cd3cdd5c24fc8784ce0b6fc7c8$exports.isSymbol = $bb5e1cd3cdd5c24fc8784ce0b6fc7c8$export$isSymbol;
$bb5e1cd3cdd5c24fc8784ce0b6fc7c8$exports.isString = $bb5e1cd3cdd5c24fc8784ce0b6fc7c8$export$isString;
$bb5e1cd3cdd5c24fc8784ce0b6fc7c8$exports.isRegExp = $bb5e1cd3cdd5c24fc8784ce0b6fc7c8$export$isRegExp;
$bb5e1cd3cdd5c24fc8784ce0b6fc7c8$exports.isPrimitive = $bb5e1cd3cdd5c24fc8784ce0b6fc7c8$export$isPrimitive;
$bb5e1cd3cdd5c24fc8784ce0b6fc7c8$exports.isPlainObject = $bb5e1cd3cdd5c24fc8784ce0b6fc7c8$export$isPlainObject;
$bb5e1cd3cdd5c24fc8784ce0b6fc7c8$exports.isObjectLike = $bb5e1cd3cdd5c24fc8784ce0b6fc7c8$export$isObjectLike;
$bb5e1cd3cdd5c24fc8784ce0b6fc7c8$exports.isObject = $bb5e1cd3cdd5c24fc8784ce0b6fc7c8$export$isObject;
$bb5e1cd3cdd5c24fc8784ce0b6fc7c8$exports.isNumber = $bb5e1cd3cdd5c24fc8784ce0b6fc7c8$export$isNumber;
$bb5e1cd3cdd5c24fc8784ce0b6fc7c8$exports.isNullOrUndefined = $bb5e1cd3cdd5c24fc8784ce0b6fc7c8$export$isNullOrUndefined;
$bb5e1cd3cdd5c24fc8784ce0b6fc7c8$exports.isNull = $bb5e1cd3cdd5c24fc8784ce0b6fc7c8$export$isNull;
$bb5e1cd3cdd5c24fc8784ce0b6fc7c8$exports.isFunction = $bb5e1cd3cdd5c24fc8784ce0b6fc7c8$export$isFunction;
$bb5e1cd3cdd5c24fc8784ce0b6fc7c8$exports.isFullString = $bb5e1cd3cdd5c24fc8784ce0b6fc7c8$export$isFullString;
$bb5e1cd3cdd5c24fc8784ce0b6fc7c8$exports.isFile = $bb5e1cd3cdd5c24fc8784ce0b6fc7c8$export$isFile;
$bb5e1cd3cdd5c24fc8784ce0b6fc7c8$exports.isEmptyString = $bb5e1cd3cdd5c24fc8784ce0b6fc7c8$export$isEmptyString;
$bb5e1cd3cdd5c24fc8784ce0b6fc7c8$exports.isDate = $bb5e1cd3cdd5c24fc8784ce0b6fc7c8$export$isDate;
$bb5e1cd3cdd5c24fc8784ce0b6fc7c8$exports.isBoolean = $bb5e1cd3cdd5c24fc8784ce0b6fc7c8$export$isBoolean;
$bb5e1cd3cdd5c24fc8784ce0b6fc7c8$exports.isBlob = $bb5e1cd3cdd5c24fc8784ce0b6fc7c8$export$isBlob;
$bb5e1cd3cdd5c24fc8784ce0b6fc7c8$exports.isArray = $bb5e1cd3cdd5c24fc8784ce0b6fc7c8$export$isArray;
$bb5e1cd3cdd5c24fc8784ce0b6fc7c8$exports.isAnyObject = $bb5e1cd3cdd5c24fc8784ce0b6fc7c8$export$isAnyObject;
$bb5e1cd3cdd5c24fc8784ce0b6fc7c8$exports.getType = $bb5e1cd3cdd5c24fc8784ce0b6fc7c8$export$getType;