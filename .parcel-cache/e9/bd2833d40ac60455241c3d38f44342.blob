var $f0f48bae60026c06259ded8ea92552d$exports = {};

/**
 * Results cache
 */
var $f0f48bae60026c06259ded8ea92552d$var$res = '';
var $f0f48bae60026c06259ded8ea92552d$var$cache;
/**
 * Expose `repeat`
 */

$f0f48bae60026c06259ded8ea92552d$exports = $f0f48bae60026c06259ded8ea92552d$var$repeat;
/**
 * Repeat the given `string` the specified `number`
 * of times.
 *
 * **Example:**
 *
 * ```js
 * var repeat = require('repeat-string');
 * repeat('A', 5);
 * //=> AAAAA
 * ```
 *
 * @param {String} `string` The string to repeat
 * @param {Number} `number` The number of times to repeat the string
 * @return {String} Repeated string
 * @api public
 */

function $f0f48bae60026c06259ded8ea92552d$var$repeat(str, num) {
  if (typeof str !== 'string') {
    throw new TypeError('expected a string');
  } // cover common, quick use cases


  if (num === 1) return str;
  if (num === 2) return str + str;
  var max = str.length * num;

  if ($f0f48bae60026c06259ded8ea92552d$var$cache !== str || typeof $f0f48bae60026c06259ded8ea92552d$var$cache === 'undefined') {
    $f0f48bae60026c06259ded8ea92552d$var$cache = str;
    $f0f48bae60026c06259ded8ea92552d$var$res = '';
  } else if ($f0f48bae60026c06259ded8ea92552d$var$res.length >= max) {
    return $f0f48bae60026c06259ded8ea92552d$var$res.substr(0, max);
  }

  while (max > $f0f48bae60026c06259ded8ea92552d$var$res.length && num > 1) {
    if (num & 1) {
      $f0f48bae60026c06259ded8ea92552d$var$res += str;
    }

    num >>= 1;
    str += str;
  }

  $f0f48bae60026c06259ded8ea92552d$var$res += str;
  $f0f48bae60026c06259ded8ea92552d$var$res = $f0f48bae60026c06259ded8ea92552d$var$res.substr(0, max);
  return $f0f48bae60026c06259ded8ea92552d$var$res;
}