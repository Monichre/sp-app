var $d1f59fb29812ce56ef7c28502b1575$exports = {};
var $d1f59fb29812ce56ef7c28502b1575$var$classofRaw = $parcel$require("41d1f59fb29812ce56ef7c28502b1575", "../internals/classof-raw");
var $d1f59fb29812ce56ef7c28502b1575$var$TO_STRING_TAG = $parcel$require("41d1f59fb29812ce56ef7c28502b1575", "../internals/well-known-symbol")('toStringTag'); // ES3 wrong here

var $d1f59fb29812ce56ef7c28502b1575$var$CORRECT_ARGUMENTS = $d1f59fb29812ce56ef7c28502b1575$var$classofRaw(function () {
  return arguments;
}()) == 'Arguments'; // fallback for IE11 Script Access Denied error

var $d1f59fb29812ce56ef7c28502b1575$var$tryGet = function (it, key) {
  try {
    return it[key];
  } catch (error) {
    /* empty */
  }
}; // getting tag from ES6+ `Object.prototype.toString`


$d1f59fb29812ce56ef7c28502b1575$exports = function (it) {
  var O, tag, result;
  return it === undefined ? 'Undefined' : it === null ? 'Null' // @@toStringTag case
  : typeof (tag = $d1f59fb29812ce56ef7c28502b1575$var$tryGet(O = Object(it), $d1f59fb29812ce56ef7c28502b1575$var$TO_STRING_TAG)) == 'string' ? tag // builtinTag case
  : $d1f59fb29812ce56ef7c28502b1575$var$CORRECT_ARGUMENTS ? $d1f59fb29812ce56ef7c28502b1575$var$classofRaw(O) // ES3 arguments fallback
  : (result = $d1f59fb29812ce56ef7c28502b1575$var$classofRaw(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : result;
};