var $d86447cf24fe2b1e54dd314489955e$exports = {};
var $d86447cf24fe2b1e54dd314489955e$var$stringify = $parcel$require("23d86447cf24fe2b1e54dd314489955e", "unist-util-stringify-position");
$d86447cf24fe2b1e54dd314489955e$exports = $d86447cf24fe2b1e54dd314489955e$var$VMessage; // Inherit from `Error#`.

function $d86447cf24fe2b1e54dd314489955e$var$VMessagePrototype() {}

$d86447cf24fe2b1e54dd314489955e$var$VMessagePrototype.prototype = Error.prototype;
$d86447cf24fe2b1e54dd314489955e$var$VMessage.prototype = new $d86447cf24fe2b1e54dd314489955e$var$VMessagePrototype(); // Message properties.

var $d86447cf24fe2b1e54dd314489955e$var$proto = $d86447cf24fe2b1e54dd314489955e$var$VMessage.prototype;
$d86447cf24fe2b1e54dd314489955e$var$proto.file = '';
$d86447cf24fe2b1e54dd314489955e$var$proto.name = '';
$d86447cf24fe2b1e54dd314489955e$var$proto.reason = '';
$d86447cf24fe2b1e54dd314489955e$var$proto.message = '';
$d86447cf24fe2b1e54dd314489955e$var$proto.stack = '';
$d86447cf24fe2b1e54dd314489955e$var$proto.fatal = null;
$d86447cf24fe2b1e54dd314489955e$var$proto.column = null;
$d86447cf24fe2b1e54dd314489955e$var$proto.line = null; // Construct a new VMessage.
//
// Note: We cannot invoke `Error` on the created context, as that adds readonly
// `line` and `column` attributes on Safari 9, thus throwing and failing the
// data.

function $d86447cf24fe2b1e54dd314489955e$var$VMessage(reason, position, origin) {
  var parts;
  var range;
  var location;

  if (typeof position === 'string') {
    origin = position;
    position = null;
  }

  parts = $d86447cf24fe2b1e54dd314489955e$var$parseOrigin(origin);
  range = $d86447cf24fe2b1e54dd314489955e$var$stringify(position) || '1:1';
  location = {
    start: {
      line: null,
      column: null
    },
    end: {
      line: null,
      column: null
    }
  }; // Node.

  if (position && position.position) {
    position = position.position;
  }

  if (position) {
    // Position.
    if (position.start) {
      location = position;
      position = position.start;
    } else {
      // Point.
      location.start = position;
    }
  }

  if (reason.stack) {
    this.stack = reason.stack;
    reason = reason.message;
  }

  this.message = reason;
  this.name = range;
  this.reason = reason;
  this.line = position ? position.line : null;
  this.column = position ? position.column : null;
  this.location = location;
  this.source = parts[0];
  this.ruleId = parts[1];
}

function $d86447cf24fe2b1e54dd314489955e$var$parseOrigin(origin) {
  var result = [null, null];
  var index;

  if (typeof origin === 'string') {
    index = origin.indexOf(':');

    if (index === -1) {
      result[1] = origin;
    } else {
      result[0] = origin.slice(0, index);
      result[1] = origin.slice(index + 1);
    }
  }

  return result;
}