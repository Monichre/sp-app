var $f6aba033a3ea9d2becb131b14fa33$exports = {};
$parcel$require("807f6aba033a3ea9d2becb131b14fa33", "react");
$parcel$require("807f6aba033a3ea9d2becb131b14fa33", "styled-components");
$parcel$require("807f6aba033a3ea9d2becb131b14fa33", "../../Home/Authed/Authed");
$parcel$require("807f6aba033a3ea9d2becb131b14fa33", "../../../lib/durationFormats");
$parcel$require("807f6aba033a3ea9d2becb131b14fa33", "./AchievementListItem");
$parcel$require("807f6aba033a3ea9d2becb131b14fa33", "../Elements");
$parcel$require("807f6aba033a3ea9d2becb131b14fa33", "./achievements-utils");
$parcel$require("807f6aba033a3ea9d2becb131b14fa33", "../../../lib/mapSizes");
$parcel$require("807f6aba033a3ea9d2becb131b14fa33", "react-sizes");

function $f6aba033a3ea9d2becb131b14fa33$var$_templateObject2() {
  var data = $f6aba033a3ea9d2becb131b14fa33$var$_taggedTemplateLiteral(["\n.ant-collapse {\n    border: none;\n}\n.ant-collapse-item {\n    background-color: #030616;\n    \n    border-bottom: 1px solid rgba(255,255,255,.1);\n}\n.ant-collapse-header {\n    color: #fff!important;\n    > * {\n        color: #fff!important;\n    }\n}\n.ant-collapse-content-box {\n    background-color: #030616;\n    color: #fff;\n}\n    background-color: #030616;\n    margin-top: 30px;\n    width: 200px;\n    overflow: visible;\n    height: auto; \n    border-right: 1px solid rgba(255,255,255,.1);\n    z-index: 20;\n\n  h4 {\n    color: #fff;\n    padding: 0!important;\n    text-align: center;\n    margin: 0!important;\n    font-size: 1.25rem;\n  }\n  \n"]);

  $f6aba033a3ea9d2becb131b14fa33$var$_templateObject2 = function _templateObject2() {
    return data;
  };

  return data;
}

function $f6aba033a3ea9d2becb131b14fa33$var$_templateObject() {
  var data = $f6aba033a3ea9d2becb131b14fa33$var$_taggedTemplateLiteral(["\n    padding: 0;\n    counter-reset: index;  \n    overflow: visible;\n\n"]);

  $f6aba033a3ea9d2becb131b14fa33$var$_templateObject = function _templateObject() {
    return data;
  };

  return data;
}

function $f6aba033a3ea9d2becb131b14fa33$var$_taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

var $f6aba033a3ea9d2becb131b14fa33$var$ListStyle = $f6aba033a3ea9d2becb131b14fa33$import$styled.ul($f6aba033a3ea9d2becb131b14fa33$var$_templateObject());
var $f6aba033a3ea9d2becb131b14fa33$var$ListWrap = $f6aba033a3ea9d2becb131b14fa33$import$styled.div($f6aba033a3ea9d2becb131b14fa33$var$_templateObject2());

var $f6aba033a3ea9d2becb131b14fa33$var$extractAchievementTypeAndValue = function extractAchievementTypeAndValue(pk) {
  var split = pk.split('#');
  var end = split.length - 1;
  var achievementType = split[end - 1];
  var achievementValue = split[end];
  return {
    achievementType: achievementType,
    achievementValue: achievementValue
  };
};

var $f6aba033a3ea9d2becb131b14fa33$var$UAL = function UAL(_ref) {
  var userId = _ref.userId,
      usersTopArtistByPeriodData = _ref.usersTopArtistByPeriodData,
      isMobile = _ref.isMobile;
  // Check browser memory for some notification shit I wanna do
  // @ts-ignore
  var achievementsFromMemory = JSON.parse(localStorage.getItem('userAchievements'));

  var _parseAchievementsByP = $f6aba033a3ea9d2becb131b14fa33$import$parseAchievementsByPeriod(usersTopArtistByPeriodData, userId),
      achievements = _parseAchievementsByP.achievements;

  var _React$useContext = $f6aba033a3ea9d2becb131b14fa33$import$React.useContext($f6aba033a3ea9d2becb131b14fa33$import$UserAchievementContext),
      setAchievements = _React$useContext.setAchievements,
      isOpen = _React$useContext.isOpen,
      setSideBarOpen = _React$useContext.setSideBarOpen,
      appNotifications = _React$useContext.appNotifications,
      setNotifications = _React$useContext.setNotifications;

  var handleClick = function handleClick() {
    return setSideBarOpen(function (isOpen) {
      return !isOpen;
    });
  };

  var weeklyAchievements = achievements.week,
      monthlyAchievements = achievements.month,
      lifetimeAchievements = achievements.life;
  var la = lifetimeAchievements ? lifetimeAchievements.slice(0, 3).map(function (_ref2) {
    var artistData = _ref2.artistData,
        achievement = _ref2.achievement;
    var total = $f6aba033a3ea9d2becb131b14fa33$import$decimalToHrsMins(achievement.total);
    achievement.formattedTotal = total;
    return {
      artistData: artistData,
      achievement: achievement
    };
  }) : [];
  var ma = monthlyAchievements ? monthlyAchievements.slice(0, 3).map(function (_ref3) {
    var artistData = _ref3.artistData,
        achievement = _ref3.achievement;
    var total = $f6aba033a3ea9d2becb131b14fa33$import$decimalToHrsMins(achievement.total);
    achievement.formattedTotal = total;
    return {
      artistData: artistData,
      achievement: achievement
    };
  }) : [];
  var wa = weeklyAchievements ? weeklyAchievements.slice(0, 3).map(function (_ref4) {
    var artistData = _ref4.artistData,
        achievement = _ref4.achievement;
    var total = $f6aba033a3ea9d2becb131b14fa33$import$decimalToHrsMins(achievement.total);
    achievement.formattedTotal = total;
    return {
      artistData: artistData,
      achievement: achievement
    };
  }) : [];
  $f6aba033a3ea9d2becb131b14fa33$import$React.useEffect(function () {
    setAchievements(achievements);
  }, []); // React.useEffect(() => {
  //     if (achievementsFromMemory) {
  //         const weekDiff = Math.abs(achievementsFromMemory.week.length - weeklyAchievements.length)
  //         const monthDiff = Math.abs(achievementsFromMemory.month.length - monthlyAchievements.length)
  //         const lifeDiff = Math.abs(achievementsFromMemory.life.length - lifetimeAchievements.length)
  //         if (weekDiff > 0 || monthDiff > 0 || lifeDiff > 0) {
  //             alert('we have achievements from last login. Lets compare the latest')
  //             let total = weekDiff + monthDiff + lifeDiff
  //             const notificationData = {
  //                 total,
  //                 week: weekDiff,
  //                 month: monthDiff,
  //                 life: lifeDiff
  //             }
  //             setNotifications(notificationData)
  //         }
  //     } else {
  //         const notificationData = {
  //             total: weeklyAchievements.length + monthlyAchievements.length + lifetimeAchievements.length,
  //             week: weeklyAchievements.length,
  //             month: monthlyAchievements.length,
  //             life:  lifetimeAchievements.length
  //         }
  //         setNotifications(notificationData)
  //     }
  // }, [achievements.week, achievements.month, achievements.life])

  return isMobile ? null : $f6aba033a3ea9d2becb131b14fa33$import$React.createElement($f6aba033a3ea9d2becb131b14fa33$var$ListWrap, null, $f6aba033a3ea9d2becb131b14fa33$import$React.createElement($f6aba033a3ea9d2becb131b14fa33$import$HeaderFlexDiv, null, $f6aba033a3ea9d2becb131b14fa33$import$React.createElement("h4", null, "Badges"), $f6aba033a3ea9d2becb131b14fa33$import$React.createElement("img", {
    src: "/icons/award.svg",
    style: {
      marginLeft: '8px'
    }
  })), $f6aba033a3ea9d2becb131b14fa33$import$React.createElement($f6aba033a3ea9d2becb131b14fa33$var$ListStyle, null, la.length ? $f6aba033a3ea9d2becb131b14fa33$import$React.createElement($f6aba033a3ea9d2becb131b14fa33$import$AchievementListItem, {
    achievementTotal: lifetimeAchievements.length,
    achievements: la,
    title: "LifeTime",
    handleClick: handleClick
  }) : null, ma.length ? $f6aba033a3ea9d2becb131b14fa33$import$React.createElement($f6aba033a3ea9d2becb131b14fa33$import$AchievementListItem, {
    achievementTotal: monthlyAchievements.length,
    achievements: ma,
    title: "This Month",
    handleClick: handleClick
  }) : null, wa.length ? $f6aba033a3ea9d2becb131b14fa33$import$React.createElement($f6aba033a3ea9d2becb131b14fa33$import$AchievementListItem, {
    achievementTotal: weeklyAchievements.length,
    achievements: wa,
    title: "This Week",
    handleClick: handleClick
  }) : null));
};

var $f6aba033a3ea9d2becb131b14fa33$export$UserAchievementsList = $f6aba033a3ea9d2becb131b14fa33$import$withSizes($f6aba033a3ea9d2becb131b14fa33$import$mapSizesToProps)($f6aba033a3ea9d2becb131b14fa33$var$UAL);
$f6aba033a3ea9d2becb131b14fa33$exports.UserAchievementsList = $f6aba033a3ea9d2becb131b14fa33$export$UserAchievementsList;