var $d96ca61aa741670671a62160965b3cd7$exports = {};
var $d96ca61aa741670671a62160965b3cd7$var$toIndexedObject = $parcel$require("d96ca61aa741670671a62160965b3cd7", "../internals/to-indexed-object");
var $d96ca61aa741670671a62160965b3cd7$var$toLength = $parcel$require("d96ca61aa741670671a62160965b3cd7", "../internals/to-length");
var $d96ca61aa741670671a62160965b3cd7$var$toAbsoluteIndex = $parcel$require("d96ca61aa741670671a62160965b3cd7", "../internals/to-absolute-index"); // `Array.prototype.{ indexOf, includes }` methods implementation
// false -> Array#indexOf
// https://tc39.github.io/ecma262/#sec-array.prototype.indexof
// true  -> Array#includes
// https://tc39.github.io/ecma262/#sec-array.prototype.includes

$d96ca61aa741670671a62160965b3cd7$exports = function (IS_INCLUDES) {
  return function ($this, el, fromIndex) {
    var O = $d96ca61aa741670671a62160965b3cd7$var$toIndexedObject($this);
    var length = $d96ca61aa741670671a62160965b3cd7$var$toLength(O.length);
    var index = $d96ca61aa741670671a62160965b3cd7$var$toAbsoluteIndex(fromIndex, length);
    var value; // Array#includes uses SameValueZero equality algorithm
    // eslint-disable-next-line no-self-compare

    if (IS_INCLUDES && el != el) while (length > index) {
      value = O[index++]; // eslint-disable-next-line no-self-compare

      if (value != value) return true; // Array#indexOf ignores holes, Array#includes - not
    } else for (; length > index; index++) if (IS_INCLUDES || index in O) {
      if (O[index] === el) return IS_INCLUDES || index || 0;
    }
    return !IS_INCLUDES && -1;
  };
};