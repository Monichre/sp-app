var $adb47bf73190f3cb7bd200071f908729$exports = {};
$adb47bf73190f3cb7bd200071f908729$exports = $adb47bf73190f3cb7bd200071f908729$var$atxHeading;
var $adb47bf73190f3cb7bd200071f908729$var$C_NEWLINE = '\n';
var $adb47bf73190f3cb7bd200071f908729$var$C_TAB = '\t';
var $adb47bf73190f3cb7bd200071f908729$var$C_SPACE = ' ';
var $adb47bf73190f3cb7bd200071f908729$var$C_HASH = '#';
var $adb47bf73190f3cb7bd200071f908729$var$MAX_ATX_COUNT = 6;

function $adb47bf73190f3cb7bd200071f908729$var$atxHeading(eat, value, silent) {
  var self = this;
  var settings = self.options;
  var length = value.length + 1;
  var index = -1;
  var now = eat.now();
  var subvalue = '';
  var content = '';
  var character;
  var queue;
  var depth;
  /* Eat initial spacing. */

  while (++index < length) {
    character = value.charAt(index);

    if (character !== $adb47bf73190f3cb7bd200071f908729$var$C_SPACE && character !== $adb47bf73190f3cb7bd200071f908729$var$C_TAB) {
      index--;
      break;
    }

    subvalue += character;
  }
  /* Eat hashes. */


  depth = 0;

  while (++index <= length) {
    character = value.charAt(index);

    if (character !== $adb47bf73190f3cb7bd200071f908729$var$C_HASH) {
      index--;
      break;
    }

    subvalue += character;
    depth++;
  }

  if (depth > $adb47bf73190f3cb7bd200071f908729$var$MAX_ATX_COUNT) {
    return;
  }

  if (!depth || !settings.pedantic && value.charAt(index + 1) === $adb47bf73190f3cb7bd200071f908729$var$C_HASH) {
    return;
  }

  length = value.length + 1;
  /* Eat intermediate white-space. */

  queue = '';

  while (++index < length) {
    character = value.charAt(index);

    if (character !== $adb47bf73190f3cb7bd200071f908729$var$C_SPACE && character !== $adb47bf73190f3cb7bd200071f908729$var$C_TAB) {
      index--;
      break;
    }

    queue += character;
  }
  /* Exit when not in pedantic mode without spacing. */


  if (!settings.pedantic && queue.length === 0 && character && character !== $adb47bf73190f3cb7bd200071f908729$var$C_NEWLINE) {
    return;
  }

  if (silent) {
    return true;
  }
  /* Eat content. */


  subvalue += queue;
  queue = '';
  content = '';

  while (++index < length) {
    character = value.charAt(index);

    if (!character || character === $adb47bf73190f3cb7bd200071f908729$var$C_NEWLINE) {
      break;
    }

    if (character !== $adb47bf73190f3cb7bd200071f908729$var$C_SPACE && character !== $adb47bf73190f3cb7bd200071f908729$var$C_TAB && character !== $adb47bf73190f3cb7bd200071f908729$var$C_HASH) {
      content += queue + character;
      queue = '';
      continue;
    }

    while (character === $adb47bf73190f3cb7bd200071f908729$var$C_SPACE || character === $adb47bf73190f3cb7bd200071f908729$var$C_TAB) {
      queue += character;
      character = value.charAt(++index);
    }

    while (character === $adb47bf73190f3cb7bd200071f908729$var$C_HASH) {
      queue += character;
      character = value.charAt(++index);
    }

    while (character === $adb47bf73190f3cb7bd200071f908729$var$C_SPACE || character === $adb47bf73190f3cb7bd200071f908729$var$C_TAB) {
      queue += character;
      character = value.charAt(++index);
    }

    index--;
  }

  now.column += subvalue.length;
  now.offset += subvalue.length;
  subvalue += content + queue;
  return eat(subvalue)({
    type: 'heading',
    depth: depth,
    children: self.tokenizeInline(content, now)
  });
}